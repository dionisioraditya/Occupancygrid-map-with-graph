import numpy as np

from graph import Graph
occupancy_grid = [
    [-1, -1, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100],
    [100, 100, 100, 0, 100, 0, 0, 100, 100, 100, 0, 100, 0, 0, 0, 100, 100, 100, 100],
    [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 100, 0, 100],
    [100, 0, 0, 0, 0, 0, 0, 100, 100, 100, 0, 100, 0, 0, 0, 0, 0, 0, 100],
    [100, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 100, 100, 100, 100, 100, 100],
    [100, 0, 0, 0, 0, 0, 100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 100],
    [0, 100, 100, 100, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 100, 100],
    [0, 100, 100, 100, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 100, 100, 100, 100, 100],
    [0, 0, 0, 0, 100, 100, 100, 0, 0, 0, 0, 100, 100, 100, 100, -1, 100, 100, 100],
    [100, 100, 100, 100, 100, 100, 100, 0, 0, 0, 100, 100, 100, 100, 100, -1, 100, 100, 100],
    [-1, -1, -1, -1, 100, 100, 100, 0, 100, 100, 100, 100, -1, -1, -1, -1, -1, -1, -1]
]



def main():
    grid_array = np.array(occupancy_grid)
    graph = Graph()
    graph.buildGraphFromGrid(grid_array)
    #print(graph.getGraph())
    key = (6,0)
    print(graph.vertics_[key].getNeighbor()) 

if __name__ == '__main__':
    main()